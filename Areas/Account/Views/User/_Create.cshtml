@model  AccountUserCreateModel
@{
    Layout = null;
}

<div class="card card-primary">
    <form id="create-form" method="post"
          data-ajax="true"
          data-ajax-method="POST"
          data-ajax-url="@Url.Action("Create","User",new {area="Account" })"
          data-ajax-complete="unobtrusiveComplete">
        @Html.AntiForgeryToken()
        <div class="card-body">
            <div class="form-group row">
                @Html.LabelFor(x => x.UserName, htmlAttributes: new { @class = "control-label" })
                @Html.TextBoxFor(x => x.UserName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "error invalid-feedback d-inline" })
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "error invalid-feedback d-inline" })
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "error invalid-feedback d-inline" })
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "error invalid-feedback d-inline" })
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "error invalid-feedback d-inline" })
            </div>
        </div>

        <div class="card-footer">
            <button type="submit" class="btn btn-success">Save</button>
            <button type="submit" class="btn btn-default close-button" data-izimodal-close="">Cancel</button>
        </div>
    </form>
</div>
<script type="text/javascript" language=javascript>
    $.validator.unobtrusive.parse(document);
</script>